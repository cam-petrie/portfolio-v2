[
  {
    "id": 6,
    "link": "",
    "timing": 0,
    "heading": "AI Based Data Cleaning",
    "desc": "Leverages AI to automate the process of data cleaning, eliminating manual intervention and ensuring more efficient and accurate results. The automation streamlines data preparation, making it faster and more reliable for subsequent analyses.",
    "stack": ["Fastify API", "TypeScript", "Langchain", "PostgreSQL", "OpenAI API"],
    "src": "cts"
  },

  {
    "id": 5,
    "link": "https://github.com/Peach97/blockchain-creator",
    "timing": 1,
    "heading": "Blockchain Creator",
    "desc": "Proof of work consensus mechanism. Established network topology to facilitate communication between nodes. Defined numbers and roles of nodes in the network (miners & validators); generated first block.",
    "stack": ["Java", "Kotlin", "Blockchain", "Git"],
    "src": "blockchain"
  },
  {
    "id": 7,
    "link": "https://github.com/Peach97/database-migration",
    "timing": 1,
    "heading": "Grocery Store DB Migration and Integration Project",
    "desc": "Performed advanced PostgreSQL DB migrations using Flyway to ensure proper tracking of DB schema changes and versioning. Optimized using indexing techniques, as well as data structures such as linked lists, hash tables, stacks, and queues.",
    "stack": [
      "Java",
      "Kotlin",
      "JUnit",
      "PostgreSQL",
      "Flyway",
      "Data Structures"
    ],
    "src": "db"
  },
  {
    "id": 2,
    "link": "https://github.com/Peach97/TakeoverPods",
    "timing": 3,
    "heading": "User Authentication For Blog",
    "desc": "Leveraged Firebase's authentication services to seamlessly manage user sign-up, login, and password recovery process. Integrated Firebase's Authentication SDK into React application ensuring smooth onboarding and sign-in procedure.",
    "stack": ["Node", "Firebase", "Authorization", "APIs"],
    "src": "authentication"
  },
  {
    "id": 1,
    "link": false,
    "timing": 4,
    "heading": "MongoDB Post Storage System/REST API",
    "desc": "Blog post storage system using MERN stack. Offers a robust and scalable solution for managing and organizing blog content. Employed Mongoose (object modeling tool for MongoDB) to simplify data schema definition and facilitate interactions with the database.",
    "stack": [
      "MongoDB",
      "NoSQL Database",
      "Node",
      "Mongoose",
      "ExpressJS",
      "REST API",
      "CRUD"
    ],
    "src": "mongo"
  }
]
